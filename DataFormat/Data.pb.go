// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: Data.proto

package DataFormat

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// game modes
type GameModes int32

const (
	GameModes_EndLessPvE   GameModes = 0
	GameModes_TimeLimitPvE GameModes = 1
	GameModes_EndLessPvP   GameModes = 2
	GameModes_TimeLimitPvP GameModes = 3
)

// Enum value maps for GameModes.
var (
	GameModes_name = map[int32]string{
		0: "EndLessPvE",
		1: "TimeLimitPvE",
		2: "EndLessPvP",
		3: "TimeLimitPvP",
	}
	GameModes_value = map[string]int32{
		"EndLessPvE":   0,
		"TimeLimitPvE": 1,
		"EndLessPvP":   2,
		"TimeLimitPvP": 3,
	}
)

func (x GameModes) Enum() *GameModes {
	p := new(GameModes)
	*p = x
	return p
}

func (x GameModes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameModes) Descriptor() protoreflect.EnumDescriptor {
	return file_Data_proto_enumTypes[0].Descriptor()
}

func (GameModes) Type() protoreflect.EnumType {
	return &file_Data_proto_enumTypes[0]
}

func (x GameModes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameModes.Descriptor instead.
func (GameModes) EnumDescriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{0}
}

type LoginMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LoginMsg) Reset() {
	*x = LoginMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMsg) ProtoMessage() {}

func (x *LoginMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMsg.ProtoReflect.Descriptor instead.
func (*LoginMsg) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{0}
}

func (x *LoginMsg) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LoginMsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *ReturnCode `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Userdata *UserData   `protobuf:"bytes,2,opt,name=userdata,proto3" json:"userdata,omitempty"`
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRsp) GetRet() *ReturnCode {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *LoginRsp) GetUserdata() *UserData {
	if x != nil {
		return x.Userdata
	}
	return nil
}

type ReturnCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Info string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ReturnCode) Reset() {
	*x = ReturnCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnCode) ProtoMessage() {}

func (x *ReturnCode) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnCode.ProtoReflect.Descriptor instead.
func (*ReturnCode) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{2}
}

func (x *ReturnCode) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReturnCode) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// id phase in UserDate means the session's id the session between client and server
type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{3}
}

func (x *UserData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HeartBeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping      uint32 `protobuf:"varint,1,opt,name=ping,proto3" json:"ping,omitempty"`
	Timestamp uint32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HeartBeatReq) Reset() {
	*x = HeartBeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatReq) ProtoMessage() {}

func (x *HeartBeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatReq.ProtoReflect.Descriptor instead.
func (*HeartBeatReq) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{4}
}

func (x *HeartBeatReq) GetPing() uint32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *HeartBeatReq) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HeartBeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *ReturnCode `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Timestamp uint32      `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HeartBeatRsp) Reset() {
	*x = HeartBeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRsp) ProtoMessage() {}

func (x *HeartBeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRsp.ProtoReflect.Descriptor instead.
func (*HeartBeatRsp) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{5}
}

func (x *HeartBeatRsp) GetRet() *ReturnCode {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *HeartBeatRsp) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// CharacData : characters' data in game
type CharacData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CharacData) Reset() {
	*x = CharacData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacData) ProtoMessage() {}

func (x *CharacData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacData.ProtoReflect.Descriptor instead.
func (*CharacData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{6}
}

func (x *CharacData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CharacData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// PlayerData : players' data
type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id - means the id allocated in the game
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// uid - the plyaer's user id
	Uid uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// name - player's name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// characdata - character player used in game
	// CharacData characdata = 4;
	// teamid - id of team
	Teamid uint32 `protobuf:"varint,4,opt,name=teamid,proto3" json:"teamid,omitempty"`
	// score - score
	// int32 score = 6;
	// ai - ID of AI
	// int32 ai = 7;
	// sid - session id between the player and server
	// uint32 sid = 8;
	IsReady bool `protobuf:"varint,5,opt,name=isReady,proto3" json:"isReady,omitempty"`
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerData) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerData) GetTeamid() uint32 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *PlayerData) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// RoomData : room data
type RoomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id - room id
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name - room name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// mode - game mode
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// mapName - mapname
	MapName string `protobuf:"bytes,4,opt,name=mapName,proto3" json:"mapName,omitempty"`
	// players - players
	Players []*PlayerData `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	// maxplayercount - max player count
	Maxplayercount int32 `protobuf:"varint,6,opt,name=maxplayercount,proto3" json:"maxplayercount,omitempty"`
	// teams - num of each team
	Team []int32 `protobuf:"varint,7,rep,packed,name=team,proto3" json:"team,omitempty"`
	// ready - if ready
	Ready bool `protobuf:"varint,8,opt,name=ready,proto3" json:"ready,omitempty"`
	// time
	Time int32 `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RoomData) Reset() {
	*x = RoomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomData) ProtoMessage() {}

func (x *RoomData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomData.ProtoReflect.Descriptor instead.
func (*RoomData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{8}
}

func (x *RoomData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomData) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *RoomData) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *RoomData) GetPlayers() []*PlayerData {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *RoomData) GetMaxplayercount() int32 {
	if x != nil {
		return x.Maxplayercount
	}
	return 0
}

func (x *RoomData) GetTeam() []int32 {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *RoomData) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *RoomData) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

// RoomListData : room list
type RoomListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*RoomData `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *RoomListData) Reset() {
	*x = RoomListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomListData) ProtoMessage() {}

func (x *RoomListData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomListData.ProtoReflect.Descriptor instead.
func (*RoomListData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{9}
}

func (x *RoomListData) GetRooms() []*RoomData {
	if x != nil {
		return x.Rooms
	}
	return nil
}

// MapData :
type MapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id - map id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name - map name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MapData) Reset() {
	*x = MapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapData) ProtoMessage() {}

func (x *MapData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapData.ProtoReflect.Descriptor instead.
func (*MapData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{10}
}

func (x *MapData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MapData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GameParam :
type GameParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id - game id
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// map - map of this game
	Map *MapData `protobuf:"bytes,2,opt,name=map,proto3" json:"map,omitempty"`
	// randseed - client use same randseed
	Randseed int32 `protobuf:"varint,3,opt,name=randseed,proto3" json:"randseed,omitempty"`
	// gamemode - mode of game
	Gamemode GameModes `protobuf:"varint,4,opt,name=gamemode,proto3,enum=DataFormat.GameModes" json:"gamemode,omitempty"`
	// limitedTime - limited time
	LimitedTime int32 `protobuf:"varint,5,opt,name=limitedTime,proto3" json:"limitedTime,omitempty"`
}

func (x *GameParam) Reset() {
	*x = GameParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameParam) ProtoMessage() {}

func (x *GameParam) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameParam.ProtoReflect.Descriptor instead.
func (*GameParam) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{11}
}

func (x *GameParam) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameParam) GetMap() *MapData {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *GameParam) GetRandseed() int32 {
	if x != nil {
		return x.Randseed
	}
	return 0
}

func (x *GameParam) GetGamemode() GameModes {
	if x != nil {
		return x.Gamemode
	}
	return GameModes_EndLessPvE
}

func (x *GameParam) GetLimitedTime() int32 {
	if x != nil {
		return x.LimitedTime
	}
	return 0
}

// PVPStartParam :
type PVPStartParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//fspparam -
	Fspparam *FSPParam `protobuf:"bytes,1,opt,name=fspparam,proto3" json:"fspparam,omitempty"`
	// gameParam -
	GameParam *GameParam `protobuf:"bytes,2,opt,name=gameParam,proto3" json:"gameParam,omitempty"`
	// players - players of the singal game
	Players []*PlayerData `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *PVPStartParam) Reset() {
	*x = PVPStartParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVPStartParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVPStartParam) ProtoMessage() {}

func (x *PVPStartParam) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVPStartParam.ProtoReflect.Descriptor instead.
func (*PVPStartParam) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{12}
}

func (x *PVPStartParam) GetFspparam() *FSPParam {
	if x != nil {
		return x.Fspparam
	}
	return nil
}

func (x *PVPStartParam) GetGameParam() *GameParam {
	if x != nil {
		return x.GameParam
	}
	return nil
}

func (x *PVPStartParam) GetPlayers() []*PlayerData {
	if x != nil {
		return x.Players
	}
	return nil
}

// GamesServerStartParam :
type GamesServerStartParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID                 uint32   `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	AuthID                 int32    `protobuf:"varint,2,opt,name=authID,proto3" json:"authID,omitempty"`
	ListPlayerID           []uint32 `protobuf:"varint,3,rep,packed,name=listPlayerID,proto3" json:"listPlayerID,omitempty"`
	ListPlayerFSPSessionID []uint32 `protobuf:"varint,4,rep,packed,name=listPlayerFSPSessionID,proto3" json:"listPlayerFSPSessionID,omitempty"`
}

func (x *GamesServerStartParam) Reset() {
	*x = GamesServerStartParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServerStartParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServerStartParam) ProtoMessage() {}

func (x *GamesServerStartParam) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServerStartParam.ProtoReflect.Descriptor instead.
func (*GamesServerStartParam) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{13}
}

func (x *GamesServerStartParam) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *GamesServerStartParam) GetAuthID() int32 {
	if x != nil {
		return x.AuthID
	}
	return 0
}

func (x *GamesServerStartParam) GetListPlayerID() []uint32 {
	if x != nil {
		return x.ListPlayerID
	}
	return nil
}

func (x *GamesServerStartParam) GetListPlayerFSPSessionID() []uint32 {
	if x != nil {
		return x.ListPlayerFSPSessionID
	}
	return nil
}

// FSPParam ：
type FSPParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host                string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Sid                 uint32 `protobuf:"varint,3,opt,name=sid,proto3" json:"sid,omitempty"`
	ServerFrameInterval int32  `protobuf:"varint,4,opt,name=serverFrameInterval,proto3" json:"serverFrameInterval,omitempty"`
	ServerTimeout       int32  `protobuf:"varint,5,opt,name=serverTimeout,proto3" json:"serverTimeout,omitempty"`
	// clientFrameRateMultiple - rate between client and server frames
	ClientFrameRateMultiple int32 `protobuf:"varint,6,opt,name=clientFrameRateMultiple,proto3" json:"clientFrameRateMultiple,omitempty"`
	AuthID                  int32 `protobuf:"varint,7,opt,name=authID,proto3" json:"authID,omitempty"`
	UseLocal                bool  `protobuf:"varint,8,opt,name=useLocal,proto3" json:"useLocal,omitempty"`
	MaxFrameID              int32 `protobuf:"varint,9,opt,name=maxFrameID,proto3" json:"maxFrameID,omitempty"`
	EnableSpeedUp           bool  `protobuf:"varint,10,opt,name=enableSpeedUp,proto3" json:"enableSpeedUp,omitempty"`
	DefaultSpeed            int32 `protobuf:"varint,11,opt,name=defaultSpeed,proto3" json:"defaultSpeed,omitempty"`
	// jitterBufferSize - buffer size
	JitterBufferSize int32 `protobuf:"varint,12,opt,name=jitterBufferSize,proto3" json:"jitterBufferSize,omitempty"`
	EnableAutoBuffer bool  `protobuf:"varint,13,opt,name=enableAutoBuffer,proto3" json:"enableAutoBuffer,omitempty"`
}

func (x *FSPParam) Reset() {
	*x = FSPParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSPParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSPParam) ProtoMessage() {}

func (x *FSPParam) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSPParam.ProtoReflect.Descriptor instead.
func (*FSPParam) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{14}
}

func (x *FSPParam) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FSPParam) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *FSPParam) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *FSPParam) GetServerFrameInterval() int32 {
	if x != nil {
		return x.ServerFrameInterval
	}
	return 0
}

func (x *FSPParam) GetServerTimeout() int32 {
	if x != nil {
		return x.ServerTimeout
	}
	return 0
}

func (x *FSPParam) GetClientFrameRateMultiple() int32 {
	if x != nil {
		return x.ClientFrameRateMultiple
	}
	return 0
}

func (x *FSPParam) GetAuthID() int32 {
	if x != nil {
		return x.AuthID
	}
	return 0
}

func (x *FSPParam) GetUseLocal() bool {
	if x != nil {
		return x.UseLocal
	}
	return false
}

func (x *FSPParam) GetMaxFrameID() int32 {
	if x != nil {
		return x.MaxFrameID
	}
	return 0
}

func (x *FSPParam) GetEnableSpeedUp() bool {
	if x != nil {
		return x.EnableSpeedUp
	}
	return false
}

func (x *FSPParam) GetDefaultSpeed() int32 {
	if x != nil {
		return x.DefaultSpeed
	}
	return 0
}

func (x *FSPParam) GetJitterBufferSize() int32 {
	if x != nil {
		return x.JitterBufferSize
	}
	return 0
}

func (x *FSPParam) GetEnableAutoBuffer() bool {
	if x != nil {
		return x.EnableAutoBuffer
	}
	return false
}

// 友军标识数据
// MaskData
type MaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid        uint32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`               // 分配的游戏内id
	FriendMask uint32 `protobuf:"varint,2,opt,name=friendMask,proto3" json:"friendMask,omitempty"` // 友军标识
	EnemyMask  uint32 `protobuf:"varint,3,opt,name=enemyMask,proto3" json:"enemyMask,omitempty"`   // 敌军标识
}

func (x *MaskData) Reset() {
	*x = MaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskData) ProtoMessage() {}

func (x *MaskData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskData.ProtoReflect.Descriptor instead.
func (*MaskData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{15}
}

func (x *MaskData) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MaskData) GetFriendMask() uint32 {
	if x != nil {
		return x.FriendMask
	}
	return 0
}

func (x *MaskData) GetEnemyMask() uint32 {
	if x != nil {
		return x.EnemyMask
	}
	return 0
}

// 游戏开始时的下行数据
// PlayerTeamData
type PlayerTeamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Masks []*MaskData `protobuf:"bytes,1,rep,name=masks,proto3" json:"masks,omitempty"`
}

func (x *PlayerTeamData) Reset() {
	*x = PlayerTeamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerTeamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTeamData) ProtoMessage() {}

func (x *PlayerTeamData) ProtoReflect() protoreflect.Message {
	mi := &file_Data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTeamData.ProtoReflect.Descriptor instead.
func (*PlayerTeamData) Descriptor() ([]byte, []int) {
	return file_Data_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerTeamData) GetMasks() []*MaskData {
	if x != nil {
		return x.Masks
	}
	return nil
}

var File_Data_proto protoreflect.FileDescriptor

var file_Data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x30, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x56, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x30, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0xf4, 0x01, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d,
	0x61, 0x78, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x3a, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x2d, 0x0a,
	0x07, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb3, 0x01, 0x0a,
	0x09, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x6d, 0x61,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x65, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0d, 0x50, 0x56, 0x50, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x73, 0x70, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x2e, 0x46, 0x53, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x66, 0x73,
	0x70, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xa3, 0x01,
	0x0a, 0x15, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x16, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x53, 0x50, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x6c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x53, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0xcc, 0x03, 0x0a, 0x08, 0x46, 0x53, 0x50, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x22, 0x5a, 0x0a, 0x08, 0x4d, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x3c,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x4d, 0x61, 0x73,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x2a, 0x4f, 0x0a, 0x09,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x6e, 0x64,
	0x4c, 0x65, 0x73, 0x73, 0x50, 0x76, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x76, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45,
	0x6e, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x50, 0x76, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x76, 0x50, 0x10, 0x03, 0x42, 0x0e, 0x5a,
	0x0c, 0x2e, 0x3b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Data_proto_rawDescOnce sync.Once
	file_Data_proto_rawDescData = file_Data_proto_rawDesc
)

func file_Data_proto_rawDescGZIP() []byte {
	file_Data_proto_rawDescOnce.Do(func() {
		file_Data_proto_rawDescData = protoimpl.X.CompressGZIP(file_Data_proto_rawDescData)
	})
	return file_Data_proto_rawDescData
}

var file_Data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Data_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_Data_proto_goTypes = []interface{}{
	(GameModes)(0),                // 0: DataFormat.GameModes
	(*LoginMsg)(nil),              // 1: DataFormat.LoginMsg
	(*LoginRsp)(nil),              // 2: DataFormat.LoginRsp
	(*ReturnCode)(nil),            // 3: DataFormat.ReturnCode
	(*UserData)(nil),              // 4: DataFormat.UserData
	(*HeartBeatReq)(nil),          // 5: DataFormat.HeartBeatReq
	(*HeartBeatRsp)(nil),          // 6: DataFormat.HeartBeatRsp
	(*CharacData)(nil),            // 7: DataFormat.CharacData
	(*PlayerData)(nil),            // 8: DataFormat.PlayerData
	(*RoomData)(nil),              // 9: DataFormat.RoomData
	(*RoomListData)(nil),          // 10: DataFormat.RoomListData
	(*MapData)(nil),               // 11: DataFormat.MapData
	(*GameParam)(nil),             // 12: DataFormat.GameParam
	(*PVPStartParam)(nil),         // 13: DataFormat.PVPStartParam
	(*GamesServerStartParam)(nil), // 14: DataFormat.GamesServerStartParam
	(*FSPParam)(nil),              // 15: DataFormat.FSPParam
	(*MaskData)(nil),              // 16: DataFormat.MaskData
	(*PlayerTeamData)(nil),        // 17: DataFormat.PlayerTeamData
}
var file_Data_proto_depIdxs = []int32{
	3,  // 0: DataFormat.LoginRsp.ret:type_name -> DataFormat.ReturnCode
	4,  // 1: DataFormat.LoginRsp.userdata:type_name -> DataFormat.UserData
	3,  // 2: DataFormat.HeartBeatRsp.ret:type_name -> DataFormat.ReturnCode
	8,  // 3: DataFormat.RoomData.players:type_name -> DataFormat.PlayerData
	9,  // 4: DataFormat.RoomListData.rooms:type_name -> DataFormat.RoomData
	11, // 5: DataFormat.GameParam.map:type_name -> DataFormat.MapData
	0,  // 6: DataFormat.GameParam.gamemode:type_name -> DataFormat.GameModes
	15, // 7: DataFormat.PVPStartParam.fspparam:type_name -> DataFormat.FSPParam
	12, // 8: DataFormat.PVPStartParam.gameParam:type_name -> DataFormat.GameParam
	8,  // 9: DataFormat.PVPStartParam.players:type_name -> DataFormat.PlayerData
	16, // 10: DataFormat.PlayerTeamData.masks:type_name -> DataFormat.MaskData
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_Data_proto_init() }
func file_Data_proto_init() {
	if File_Data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVPStartParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServerStartParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSPParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerTeamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Data_proto_goTypes,
		DependencyIndexes: file_Data_proto_depIdxs,
		EnumInfos:         file_Data_proto_enumTypes,
		MessageInfos:      file_Data_proto_msgTypes,
	}.Build()
	File_Data_proto = out.File
	file_Data_proto_rawDesc = nil
	file_Data_proto_goTypes = nil
	file_Data_proto_depIdxs = nil
}
